var Faker = require('../index');
var Helpers = require('./helpers');

var user = {
    owner: function () {
        var ownerInfo = Helpers.createYoYoUser();
        ownerInfo.contacts = this.contacts();

        return ownerInfo;
    },
    contacts: function () {
        var sourceContacts = [];
        var targetContacts = [];
        var amountOfContact = Faker.random.range(300, 700);
        for (var i = 0; i < amountOfContact; i++) {
            sourceContacts.push(Helpers.createYoYoUser());
        }

        targetContacts.push(sourceContacts[0]);
        for (i = 1; i < amountOfContact; i++) {
            var repeatInfo = Faker.random.array_element(targetContacts);
            var unRepeatInfo = sourceContacts[i];
            var rule = this.randomRule();
            var infoTemp = this.repeatAsRule(repeatInfo, unRepeatInfo, rule);
            targetContacts.push(infoTemp);
        }

        this.cleanSomeInfo(targetContacts);

        return targetContacts;
    },

    cleanSomeInfo: function (contacts) {
        for (var i = 0; i < contacts.length; i++) {
            var infoTemp = contacts[i];
            infoTemp.ims = Math.random() < 0.05 ? infoTemp.ims : null;
            infoTemp.sn = Math.random() < 0.03 ? infoTemp.sn : null;
            infoTemp.addresses = Math.random() < 0.02 ? infoTemp.addresses : null;
        }
    },

    repeatAsRule: function (repeatInfo, unRepeatInfo, rule) {
        var infoTemp = unRepeatInfo;
        var i = 0;
        for (var key in infoTemp) {
            infoTemp[key] = rule[i++] ? repeatInfo[key] : unRepeatInfo[key];
        }
        return infoTemp;
    },

    //根据权重来随机出重复联系人的规则
    randomRule: function () {
        //0不重复，1重复
        var rules = [
            {
                rule: [0, 0, 0, 0, 0, 0],
                weight: 0.8
            },
            {
                rule: [1, 0, 0, 0, 0, 0],
                weight: 0.05
            },
            {
                rule: [0, 1, 0, 0, 0, 0],
                weight: 0.05
            },
            {
                rule: [0, 0, 1, 0, 0, 0],
                weight: 0.02
            },
            {
                rule: [0, 0, 0, 1, 0, 0],
                weight: 0.02
            },
            {
                rule: [0, 0, 0, 0, 1, 0],
                weight: 0.02
            },
            {
                rule: [0, 0, 0, 0, 0, 1],
                weight: 0.02
            },
            {
                rule: [1, 0, 1, 0, 0, 0],
                weight: 0.01
            },
            {
                rule: [0, 1, 0, 1, 0, 0],
                weight: 0.008
            },
            {
                rule: [1, 1, 0, 0, 1, 0],
                weight: 0.002
            }
        ];

        var weightTemp = 0;
        var randomWeight = Math.random();
        for (var i = 0; i < rules.length; i++) {
            if (randomWeight <= weightTemp) {
                break;
            }
            weightTemp += rules[i].weight;
        }

        return rules[i - 1].rule;
    }

};

module.exports = user;